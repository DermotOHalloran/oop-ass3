package ie.dit.reeageshark;

import java.util.ArrayList;

import android.graphics.Bitmap;
import android.graphics.Canvas;

public class Shark {
	
	private Bitmap bitmap;	
	private int x;			
	private int y;			
	private int Speed;
	private int inc;
	private int ScreenWidth;
	private int ScreenHeight;
	boolean up;
	float VertSpeed;
	public ArrayList<Bitmap> Blood = null;
	boolean death;
	
	float animTime=0;
	float totalAnimTime = 1;
	float numFrames;
	
	public Shark(Bitmap decodeResource, int i, int j, int screenWidth,int screenHeigt)
	{
		this.bitmap = decodeResource;
		this.x = x;
		this.y = y;
		Speed=1;
		inc=0;
		VertSpeed = 0;
		ScreenWidth =screenWidth;
		ScreenHeight = screenHeigt;
		death=false;
	}
	
	public void setBoomAnimation(ArrayList<Bitmap> animation){
		Blood = new ArrayList<Bitmap>(animation);
		numFrames = Blood.size();
	}
	
	public void draw(Canvas canvas)
	{
		if (!death)
		{
			canvas.drawBitmap(bitmap, x - bitmap.getWidth()/2, y - bitmap.getHeight()/2, null);
		}
		else
		{
			int index = (int) (animTime/totalAnimTime*numFrames);
			if (index<numFrames)
				canvas.drawBitmap(Blood.get(index), (x - bitmap.getWidth()/2)+100, y - bitmap.getHeight()/2, null);
		}
	}
	public void update(float dt)//if shark crashes to the obsticles we add the animation variable to dt variable
	{
		if (death)
		{
			animTime += dt;
		}
		else//describing shark motion and shark update in its regular state
		{
			VertSpeed+=ScreenHeight/2*dt;
			if (up)
				VertSpeed-=ScreenHeight*dt*2;
			y+=VertSpeed*dt;
			
			if (y - (bitmap.getHeight() / 2)>ScreenWidth)			
				y= 0- (bitmap.getHeight() / 2);
		}
	}
	

}
