package ie.dit.reeageshark;

import android.content.Context;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.view.MotionEvent;
import android.view.SurfaceHolder;
import android.view.SurfaceView;

public class GamePanel extends SurfaceView implements SurfaceHolder.Callback {

	public MainThread thread;
	public boolean Pause_game;
	private Background background;
	public float SharkSpeed; 
	public int ScreenWidth;
	public int ScreenHeight;
	public Game game;
	private Shark shark;
	private Barriermanager BM;
	
	
	public GamePanel(Context context, Game game,int ScreenWidth,int ScreenHeigt) {
		super(context);
		getHolder().addCallback(this);
		this.game = game;
		thread = new MainThread(getHolder(),this);
		background = new Background(BitmapFactory.decodeResource(getResources(), R.drawable.game_fon), ScreenWidth, this);
		BM = new Barriermanager(BitmapFactory.decodeResource(getResources(), R.drawable.barier), this);
		BM.setScreen(ScreenWidth, ScreenHeight);
		shark = new Shark(BitmapFactory.decodeResource(getResources(), R.drawable.player), 100, 0, ScreenWidth, ScreenHeigt);
		
		
		
		
		
		setFocusable(true);
		SharkSpeed = ScreenWidth/2.f;
		this.ScreenWidth = ScreenWidth;
		this.ScreenHeight = ScreenHeigt;
	}

	@Override //movement of the shark if the screen is clicked the shark goes up
	public boolean onTouchEvent(MotionEvent event) {
		if (event.getAction()==MotionEvent.ACTION_DOWN){
			shark.up=true;
		}
		if (event.getAction()==MotionEvent.ACTION_UP){
			shark.up=false;
		}
		
		return true;// make sure that touching allredy happened
	}
	
	void Draw(Canvas canvas){
		if (!Pause_game)
			if (canvas!=null){
				canvas.drawColor(Color.BLACK);
				background.draw(canvas);
				shark.draw(canvas);//drawing the shark
				BM.draw(canvas);//drawing the barriers
			}
				
	}
	
	void Update(float dt){
	
		background.update(dt);
		shark.update(dt);//updating the shark
		BM.update(dt);//updating barriers
		
		
	}
	
	@Override
	public void surfaceChanged(SurfaceHolder holder, int format, int width,
			int height) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void surfaceCreated(SurfaceHolder holder) {
		// TODO Auto-generated method stub
		thread.setActive(true);
		thread.start();
		
	}

	@Override
	public void surfaceDestroyed(SurfaceHolder holder) {
		// TODO Auto-generated method stub
		boolean retry = true;
		while (retry) {
				try{
					thread.join();
					retry=false;
				} catch (InterruptedException e){
					
				}
			
		}
		
	}

}
